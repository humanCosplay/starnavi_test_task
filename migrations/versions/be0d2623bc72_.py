"""empty message

Revision ID: be0d2623bc72
Revises: 49952fde9c90
Create Date: 2020-07-02 16:56:01.982286

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be0d2623bc72'
down_revision = '49952fde9c90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_plan_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_effective_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_effective_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subscription_plan_versions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subscription_plan_versions_created_date'), ['created_date'], unique=False)

    with op.batch_alter_table('billing_cycles', schema=None) as batch_op:
        batch_op.alter_column('end_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('data_usages', schema=None) as batch_op:
        batch_op.alter_column('from_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('to_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('activation_date', sa.TIMESTAMP(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('expiry_date', sa.TIMESTAMP(timezone=True), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.drop_column('expiry_date')
        batch_op.drop_column('activation_date')

    with op.batch_alter_table('data_usages', schema=None) as batch_op:
        batch_op.alter_column('to_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('from_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('billing_cycles', schema=None) as batch_op:
        batch_op.alter_column('start_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('end_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('subscription_plan_versions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscription_plan_versions_created_date'))

    op.drop_table('subscription_plan_versions')
    # ### end Alembic commands ###
